@model ProductListViewModel

@{
    ViewData["Title"] = "Add Prduct";
}

<div class="addBox">
    <div class="addForm">
        <div class="form-container mt-4">
            @using (Html.BeginForm("AddToList", "Order", FormMethod.Post))
            {
                <div class="alert-danger" role="alert">
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary("", new { @class="text-danger" })
                    @TempData["Error"]
                </div>
                @Html.HiddenFor(model => model.ProductId)
                <div class="inputs">
                    <div class="row mb-4">
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.ProductName, new { @class = "required" })
                            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control", @value=Model.ProductName, @readonly="readonly" } })
                            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class="text-danger" })
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.Price)
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @value=Model.Price, @readonly="readonly" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class="text-danger" })
                        </div>
                    </div>
                    <div class="row mb-4">
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.Quantity)
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control required", onchange=("CalcTotal()"),min="0", oninput="validity.valid||(value='');"} })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class="text-danger" })
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.Total)
                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control required", @readonly="readonly" } })
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="">
                            <input type="submit" value="Add" class="btn btn-primary btn-lg" /> |
                            @Html.ActionLink("Cancel", "Index", "Home", "", new { @class="btn btn-danger btn-lg" })
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>    
</div>

<script>
    let price = document.getElementById('Price').value;
    let total = document.getElementById('Total');   
    let quantity = document.getElementById('Quantity');

    quantity.value = 1;
    total.value = price;
    
    function CalcTotal() {
        let quantity = document.getElementById('Quantity').value;
        total.value = (price * quantity).toFixed("2")
    }
</script>